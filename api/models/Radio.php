<?php

namespace api\models;
use common\models\RadioCommentModel;
use common\models\RadioModel;
use common\models\UserModel;
use common\Helper;
use common\models\RadioLikeModel;
use common\models\RadioCollectModel;
use common\models\RadioLabelModel;
use common\models\LabelModel;
use common\models\RadioParticipantModel;
use common\models\RadioShaftModel;
use common\models\ArticleLabelModel;
use common\VarTmp;
use Yii;


class Radio extends RadioModel
{
    public static $userId; // 当前用户的id

    public function fields()
    {
        $fields = parent::fields(); // TODO: Change the autogenerated stub
        unset($fields['content']);
        unset($fields['admin_id']);
        unset($fields['status']);
        unset($fields['update_time']);
/*      这版本暂时没有电台类型
        $fields['type_name'] = function (){
            return '暂时写死';
        };
*/

        $fields['before_time'] = function (){
            return Helper::transferTime($this->create_time);
        };

        $fields['create_time'] = function (){
            return date('Y-m-d', strtotime($this->create_time));
        };

        $fields['like'] = function (){
            $num = RadioLikeModel::find()->where(['radio_id' => $this->id,"user_id" => self::$userId])->one();
            return $num ? 1 : 0;
        };

        $fields['collect_num'] = function (){
            return RadioCollectModel::find()->where(['radio_id' => $this->id])->one() ? 1 : 0;
        };

        $fields['collect'] = function (){
            return RadioCollectModel::find()->where(['radio_id' => $this->id, "user_id" => self::$userId])->one() ? 1 : 0;
        };

        $fields['comment_num'] = function (){
            // pid 0 评论文章的评论才显示评论数
            $all_comment_num = RadioCommentModel::find()->where(['radio_id' => $this->id, 'pid'=>0])->andWhere(['del' => 0])->count();
            $private_num = RadioCommentModel::find()->where(['radio_id' => $this->id, 'is_private' => 1, 'pid'=>0])->andWhere(['<>','user_id',self::$userId])->count();
            return intval($all_comment_num - $private_num);
        };

        $fields['share_url'] = function (){
            $host_info = Yii::$app->params['share_url'];
            $id = $this->id;
            $radio_url = $this->radio_url;
            return $host_info . "/?id=$id&" . "radio_url=$radio_url";
        };

        $fields['radio_time'] = function (){
            // 秒钟时间
            $second_time = RadioShaftModel::find()->select('at')->where(['radio_id' => $this->id])->orderBy('at desc')->scalar() ?: '';
            if(!$second_time) return '00:00';
            return Helper::formatTime($second_time);
        };

        $fields['radio_size'] = function (){
            return round($this->size / 1024,2) . 'MB';
        };

        $fields['participants'] = function (){
            // 参与者
            $data = RadioParticipantModel::find()->select('user_id')->where(['radio_id' => $this->id])->asArray()->all();
            foreach ($data as $k=>&$v){
                $v['id'] = intval($v['user_id']);
                $user_info = UserModel::find()->select('nick_name,avatar_image')->where(['id' => $v])->one();
                $v['nick_name'] = $user_info['nick_name'] ?? '';
                $v['avatar_image'] = $user_info['avatar_image'] ?? '';
                unset($v['user_id']);
            }
            return $data;
        };

        $fields['radio_shaft'] = function (){
            $data = RadioShaftModel::find()->where(['radio_id' => $this->id])->orderBy('at asc')->asArray()->all();
            $helper = new Helper();
            foreach ($data as $k=>&$v){
                if(is_array($v)) $v = array_map([$helper, 'strToInt'], $v);
            }
            return $data;
        };

        return $fields;
    }

    public function extraFields()
    {
        // 电台content内容
        $fields['content'] = function (){
            return mb_convert_encoding(htmlspecialchars_decode($this->content), 'UTF-8', 'UTF-8');
        };

        // 电台标签
        $fields['label'] = function (){
            $label_data = RadioLabelModel::find()->where(['radio_id' => $this->id])->asArray()->all();
            $label_id = array_column($label_data,'label_id');
            return LabelModel::find()->where(['id'=> $label_id])->asArray()->all();
        };

        // 电台相关推荐
        $fields['recommend'] = function (){
            $data = RadioLabelModel::find()->where(['radio_id' => $this->id])->asArray()->all();
            if($data){
                $label_id = array_column($data,'label_id');
                $radio_label_arr = RadioLabelModel::find()->select('radio_id')
                    ->leftJoin('radio as a','a.id=radio_label.radio_id')
                    ->where("radio_id!={$this->id}")
                    ->andWhere(['a.status' => 1])
                    ->andwhere(['label_id' => $label_id])
                    ->asArray()
                    ->all();

                if($radio_label_arr){
                    $radio_id = array_column($radio_label_arr,'radio_id');
                    if(count($radio_id) > 3){
                        shuffle($radio_id);
                        array_splice($radio_id,3);  // 随机取3篇相关推荐
                    }

                    $radio_info = [];
                    foreach ($radio_id as $id){
                        $info = Radio::find()->select('id,preview_image as images,title,type')->where(['id' => $id])->asArray()->one();
                        $info['like_num'] = Radio::find()->select('like_num')->where(['id' => $id])->scalar() ?? 0;
                        $info['comment_num'] = RadioComment::find()->where(['radio_id' => $id])->count();
                        /* type类型这一块 暂时没有
                        $type_name = ArticleTypeModel::find()->select('at_name')->where(['at_id' => $info['type']])->scalar();
                        $info['type_name'] = $type_name ? $type_name : '';
                        */
                        $radio_info[] = $info;
                    }
                    return $radio_info;
                }

            }
            return [];
        };

        /*
         * 推荐相关文章
         * */
        $fields['read_recommend'] = function (){
            $data = RadioLabelModel::find()->where(['radio_id' => $this->id])->asArray()->all();
            if($data){
                $label_id = array_column($data,'label_id');
                $article_data = ArticleLabelModel::find()->select('article_id')->where(['in', 'label_id',$label_id])->asArray()->all();
                $article_id = array_unique(array_column($article_data,'article_id'));
                foreach ($article_id as $k=>$v){
                    $status = UserModel::find()->select('status')->where(['id' => $article_id])->scalar() ?: 0;
                    if($status == 0) unset($article_id[$k]);
                }

                if(count($article_id) > 4){
                    shuffle($article_id);
                    array_splice($article_id,4);  // 随机取4篇文章的相关推荐
                }
                $article_info = [];
                foreach ($article_id as $id){
                    $info = Article::find()->select('id,preview_image as images,title,type,create_time,creater,desc')->where(['id' => $id])->asArray()->one();
                    $user_id = $info['creater'] ?? 0;
                    $info['create_time'] = $info['create_time'] ? date('Y-m-d', strtotime($info['create_time'])) : '';
                    $info['avatar_image'] =  UserModel::find()->select('avatar_image')->where(['id' => $user_id])->scalar() ? : '';
                    $info['like_num'] = Article::find()->select('like_num')->where(['id' => $id])->scalar() ?? 0;
                    $info['comment_num'] = ArticleComment::find()->where(['article_id' => $id])->count();
                    unset($info['type']);
                    unset($info['creater']);
//                    $type_name = ArticleTypeModel::find()->select('at_name')->where(['at_id' => $info['type']])->scalar();
//                    $info['type_name'] = $type_name ? $type_name : '';
                    $article_info[] = $info;
                }

                $helper = new Helper();
                foreach ($article_info as $k=>&$v){
                    if(is_array($v)) $v = array_map([$helper, 'strToInt'], $v);
                }

                return $article_info;

            }
            return [];
        };

        return $fields;

    }

}
