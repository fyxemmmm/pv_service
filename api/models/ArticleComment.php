<?php

namespace api\models;
use common\models\ArticleCommentModel;
use common\models\UserModel;
use common\models\ArticleCommentLikeModel;


class ArticleComment extends ArticleCommentModel
{
    public static $userId;
    public static $child_offset_page;
    public static $child_per_page;
    public static $switch;  // 开关 控制给前端传递的是否是有限的数据或者所有

    public function fields()
    {
        $fields = parent::fields();
        $fields['comment_count'] = function (){
            return ArticleComment::find()->where(['article_id' => $this->article_id])->count();
        };

        $fields['nick_name'] = function (){
            $data = UserModel::find()->select('nick_name')->where(['id' => $this->user_id])->scalar();
            if($data) return $data;
            return '';
        };

        $fields['avatar_image'] = function (){
            $data = UserModel::find()->select('avatar_image')->where(['id' => $this->user_id])->scalar();
            if($data) return $data;
            return '';
        };

        $fields['time_before'] = function (){
            $create_time = $this->create_time ?: '';
            return $this->getTime($create_time);
        };

        $fields['like'] = function (){
            $data = ArticleCommentLikeModel::find()->where(['user_id' => self::$userId, 'comment_id' => $this->id])->scalar();
            return $data ? 1 : 0;
        };

        $fields['like_count'] = function (){
            return ArticleCommentLikeModel::find()->where(['comment_id' => $this->id])->count();
        };
        $fields['child'] = function (){
            $query = ArticleComment::find()->where(['pid' => $this->id, 'del' => 0]);
            if(self::$switch){
                // 有限数据
                $child_info = $query->orderBy('create_time desc')->limit(4)->asArray()->all();
            }else{
                $child_info = $query->orderBy('create_time desc')->asArray()->all();
            }

            if(empty($child_info)) return [];
            foreach ($child_info as $k=>&$v){
                $create_time = $v['create_time'] ?: '';
                $time_info = $this->getTime($create_time);
                $v['time_before'] = $time_info;
                $data = UserModel::find()->select('avatar_image,nick_name')->where(['id' => $v['user_id']])->asArray()->one();
                $v['avatar_image'] = $data['avatar_image'] ?? '';
                $v['nick_name'] = $data['nick_name'] ?? '';
                $like = ArticleCommentLikeModel::find()->where(['user_id' => self::$userId, 'comment_id' => $v['id']])->scalar();
                $v['like'] = $like ? 1 : 0;
                $v['like_count'] = ArticleCommentLikeModel::find()->where(['comment_id' => $v['id']])->count();
                $reply_user = parent::find()->where(['id'=>$v['reply_pid']])->one();
                if($reply_user){
                    $id = $reply_user->user_id;
                    $reply_user = UserModel::find()->select('id,nick_name')->where(['id' => $id])->one();
                    $v['replied_user_id'] = $reply_user['id'] ?? '';
                    $v['replied_nick_name'] = $reply_user['nick_name'] ?? '';
                }
            }
            return $child_info;
        };

        return $fields; // TODO: Change the autogenerated stub
    }


    public function getTime($time) : string
    {
        if(!empty($time)){
            $now_diff = time() - strtotime($time);
            if($now_diff / 86400 > 1){
                $day = $now_diff / 86400;
                $time_info =  floor($day).'天前';
            }elseif ($now_diff / 3600 > 1){
                $hour = $now_diff / 3600;
                $time_info =  floor($hour).'小时前';
            }elseif ($now_diff / 60 > 1){
                $minute = $now_diff / 60;
                $time_info =  floor($minute).'分钟前';
            }else{
                $time_info = '刚刚';
            }
        }else{
            $time_info = '';
        }
        return $time_info;
    }

}